#![cfg_attr(not(feature = "std"), no_std, no_main)]

#[ink::contract]
pub mod delegate_call_exploiter {

    #[ink(storage)]
    pub struct DelegateCallExploiter {
        admin: AccountId,
    }

    impl DelegateCallExploiter {
        #[ink(constructor)]
        pub fn new() -> Self {
            Self {
                admin: Self::env().caller(),
            }
        }

        /// Returns the values to pay dependant on the saved percents
        #[ink(message, payable)]
        pub fn change_admin(&mut self, new_admin: AccountId) -> AccountId {
            self.admin = new_admin;
            self.admin
        }

        /// Returns the codehash of the contract
        #[ink(message)]
        pub fn codehash(&self) -> Hash {
            self.env()
                .code_hash(&self.env().account_id())
                .expect("Failed to get code hash")
        }
    }
}
